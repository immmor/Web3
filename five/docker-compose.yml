version: '3.8'

services:
  # Zookeeper 服务（Kafka 依赖）
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - app-network

  # Kafka 服务
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped
    networks:
      - app-network

  # Redis 服务
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      # 可选：设置密码，取消注释并修改密码
      # REDIS_PASSWORD: your_redis_password
      REDIS_PORT: 6379
      REDIS_DATABASES: 16
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network

  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: app_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    volumes:
      - mysql-data:/var/lib/mysql
      # 可选：初始化脚本目录，将 SQL 文件放在 ./mysql-init 目录下
      # - ./mysql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - app-network

# 网络配置
networks:
  app-network:
    driver: bridge

# 数据卷配置（持久化数据）
volumes:
  redis-data:
  mysql-data:
    